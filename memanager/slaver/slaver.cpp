// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include<stdio.h>
#include<unistd.h>
#include <sys/time.h>

#include "trans_data.h"
#include "set_tbmeta.h"
#include "load_data.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/transport/TSocket.h>
#include <thrift/transport/TTransportUtils.h>

using namespace std;
using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;

int main(int argc, char **argv) {
  boost::shared_ptr<TTransport> socket(new TSocket("localhost",9190));
  boost::shared_ptr<TTransport> transport(new TBufferedTransport(socket));
  boost::shared_ptr<TProtocol> protocol(new TBinaryProtocol(transport));
  memanager::trans_dataClient client(protocol);

  try{
    transport->open();
    memanager::TTable tb;
    memanager::TResultSet set;
    memanager::createTableMeta(tb);
    memanager::setSchema(set,tb);
    memanager::load_hdfs(set);
    client.trans_data(set,tb);
    transport->close();
  } catch(TException &tx){
    printf("ERROR: %s\n",tx.what());
  }

  return 0;
}
